[["index.html", "Final Project Introduction View GitHub Code 0.1 Methods 0.2 Site Description 0.3 Data Acquisition and Plotting Tests 0.4 Interactive Graph 0.5 Information about the Poudre River", " Final Project Madeline Bean 2022-03-22 Introduction This bookdown website is comprised of all assignments completed in Introduction to Data Science Course ESS 580A7. I completed this class in my spring semester of 2022 while getting my Professional Science Master’s in Ecosystem Sciences and Sustainability. View GitHub Code The code used to build this R Bookdown is hosted on GitHub. Final Project GitHub #Poudre River Interactive Graph The Poudre River runs through northern Colorado, passing through Fort Collins, CO. In this assignment, we look at the the annual discharge of the river to determine annual patterns and severe weather events. 0.1 Methods The Poudre River at Lincoln Bridge is: Downstream of only a little bit of urban stormwater Near Odell Brewing CO Near an open space area and the Poudre River Trail Downstream of many agricultural diversions 0.2 Site Description 0.3 Data Acquisition and Plotting Tests 0.3.1 Data Download q &lt;- readNWISdv(siteNumbers = &#39;06752260&#39;, parameterCd = &#39;00060&#39;, startDate = &#39;2017-01-01&#39;, endDate = &#39;2022-01-01&#39;) %&gt;% rename(q = &#39;X_00060_00003&#39;) 0.3.2 Static Data Plotter ggplot(q, aes(x = Date, y = q)) + geom_line() + ylab(&#39;Q (cfs)&#39;) + ggtitle(&#39;Discharge in the Poudre River, Fort Collins&#39;) 0.3.3 Interactive Data Plotter q_xts &lt;- xts(q$q, order.by = q$Date) #plotting dygraph(q_xts) %&gt;% dyAxis(&quot;y&quot;, label = &quot;Discharge (cfs)&quot;) 0.4 Interactive Graph #creating an interactive graph dygraph(q_xts) %&gt;% dyOptions(drawPoints = TRUE, pointSize = 2) 0.5 Information about the Poudre River The History of the Poudre River The Cache la Poudre River got its name from a group of French trappers that hid their gun powder on the banks of the river to lighten their wagons. Hence the translation of the name to be the “hiding place of the powder.” Since the 1800’s, the Poudre River has been a vital resource for the Northern Colorado community. From industrial to agricultural and to residential use, the water from the Poudre river is in great demand. Poudre River Geomorphology The Poudre River starts high in the Rocky Mountain National Park peaks and flows north east through the Roosevelt National Forest, slowly making its way through the city of Fort Collins. There are a lot of recreational activities that occur along the river, including hiking, biking, kayaking, and white water rafting. However, because of the multiple reservoirs that consume water from the Poudre, the once rapid, flowing river is now only a trickling stream in some areas, especially during the winter months. "],["hayman-fire-recovery.html", "Chapter 1 Hayman Fire Recovery 1.1 Reading in the Data 1.2 NDVI and NDMI Correlation 1.3 Average NDSI and NDVI Correlation 1.4 Snow Effect Differences 1.5 Average Greenest Month 1.6 Average Snowiest Month", " Chapter 1 Hayman Fire Recovery The Hayman Fire occurred on June 8th, 2002. This was the largest wildfire in Colorado’s history until 2020, burning over 138,000 acres of land. In this assignment, we looked at how the fire affected vegetation growth in the area. library(tidyverse) library(tidyr) library(ggthemes) library(lubridate) library(ggpubr) # Now that we have learned how to munge (manipulate) data # and plot it, we will work on using these skills in new ways knitr::opts_knit$set(root.dir=&#39;..&#39;) 1.1 Reading in the Data ####-----Reading in Data and Stacking it ----- #### #Reading in files files &lt;- list.files(&#39;02-hw-hayman&#39;,full.names=T) #Read in individual data files ndmi &lt;- read_csv(&#39;/Users/maddiebean21/Desktop/School/ESS580A7/bookdown_final/data/02-hw-hayman/hayman_ndmi.csv&#39;) %&gt;% rename(burned=2,unburned=3) %&gt;% mutate(data=&#39;ndmi&#39;) ndsi &lt;- read_csv(&#39;/Users/maddiebean21/Desktop/School/ESS580A7/bookdown_final/data/02-hw-hayman/hayman_ndsi.csv&#39;) %&gt;% rename(burned=2,unburned=3) %&gt;% mutate(data=&#39;ndsi&#39;) ndvi &lt;- read_csv(&#39;/Users/maddiebean21/Desktop/School/ESS580A7/bookdown_final/data/02-hw-hayman/hayman_ndvi.csv&#39;)%&gt;% rename(burned=2,unburned=3) %&gt;% mutate(data=&#39;ndvi&#39;) # Stack as a tidy dataset full_long &lt;- rbind(ndvi,ndmi,ndsi) %&gt;% gather(key=&#39;site&#39;,value=&#39;value&#39;,-DateTime,-data) %&gt;% filter(!is.na(value)) 1.2 NDVI and NDMI Correlation In order to find the correlation between NDVI and NDMI, we converted the full_long dataset into a wide dataset using the function “spread” and then made a plot of this function, grouped by unburned vs burned sites. We excluded winter months and focused on summer months because vegetation does not generally grow in the winter. #changing data into wide full_wide &lt;- spread(data=full_long,key=&#39;data&#39;,value=&#39;value&#39;) %&gt;% filter_if(is.numeric,all_vars(!is.na(.))) %&gt;% mutate(month = month(DateTime), year = year(DateTime)) #filtering summer months summer_only &lt;- filter(full_wide,month %in% c(6,7,8,9)) #plotting summer months of variables ggplot(summer_only,aes(x=ndmi,y=ndvi,color=site)) + geom_point() + theme_few() + scale_color_few() + theme(legend.position=c(0.8,0.8)) There is a strong, positive correlation between NDMI and NDVI. 1.3 Average NDSI and NDVI Correlation In order to find the correlation between the average NDSI and NDVI, we used the data points for NDSI only during January - April (snow season) and only data points for NDVI during June - August (vegetation growth season). We found that there is a low positive correlation of 0.180 between snow coverage and vegetation. This means that the previous year’s snow cover has little effect on the vegetation growth for the following summer and that this correlation could be from other factors in the environment. Looking at the graph, you can see a difference in correlation between NDVI and NDSI burned and un-burned sites. #variable ndsi months var.snow_months &lt;- c(1,2,3,4) #variable ndvi months var.growth_months &lt;- c(6,7,8) #mean NDSI per year ndsi_avg &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndsi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% filter(month %in% var.snow_months) %&gt;% group_by(site, year) %&gt;% summarize(ndsi_avg=mean(ndsi)) #mean NDVI per year ndvi_avg &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndvi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% filter(month %in% var.growth_months) %&gt;% group_by(site, year) %&gt;% summarize(ndvi_avg=mean(ndvi)) #combining NDVI and NDSI into one dataset combined &lt;- inner_join(ndvi_avg, ndsi_avg) #correlation cor(combined$ndvi_avg, combined$ndsi_avg) ## [1] 0.1803564 ggplot(combined, aes(x=ndsi_avg, y=ndvi_avg, color=site)) + geom_point() + theme_few() + scale_color_few() + theme(legend.position=c(0.8,0.8)) 1.4 Snow Effect Differences We then looked at the difference of snow effect from the previous correlation between pre- and post-burn and burned and unburned. #snow effect pre-burn preburn &lt;- c(1984:2001) #snow effect post-burn postburn &lt;- c(2003:2019) #snow effect average for preburn ndsi_preburn_avg &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndsi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% filter(month %in% var.snow_months) %&gt;% filter(year %in% preburn) %&gt;% group_by(site, year) %&gt;% summarize(ndsi_preburn_avg=mean(ndsi)) #vegetation effect average for preburn ndvi_preburn_avg &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndvi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% filter(month %in% var.growth_months) %&gt;% filter(year %in% preburn) %&gt;% group_by(site, year) %&gt;% summarize(ndvi_preburn_avg=mean(ndvi)) #combing preburn ndsi and ndvi into one data set combine_preburn &lt;- inner_join(ndsi_preburn_avg, ndvi_preburn_avg) #correlation for preburn cor(combine_preburn$ndsi_preburn_avg, combine_preburn$ndvi_preburn_avg) ## [1] 0.09100615 #snow effect average for postburn ndsi_postburn_avg &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndsi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% filter(month %in% var.snow_months) %&gt;% filter(year %in% postburn) %&gt;% group_by(site, year) %&gt;% summarize(ndsi_postburn_avg=mean(ndsi)) #vegetation effect average for postburn ndvi_postburn_avg &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndvi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% filter(month %in% var.growth_months) %&gt;% filter(year %in% postburn) %&gt;% group_by(site, year) %&gt;% summarize(ndvi_postburn_avg=mean(ndvi)) #combing postburn ndsi and ndvi into one data set combine_postburn &lt;- inner_join(ndsi_postburn_avg, ndvi_postburn_avg) #correlation for postburn cor(combine_postburn$ndsi_postburn_avg, combine_postburn$ndvi_postburn_avg) ## [1] 0.24394 #snow effect average for burned ndsi_burned_avg &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndsi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% filter(month %in% var.snow_months) %&gt;% filter(site %in% &quot;burned&quot;) %&gt;% group_by(site, year) %&gt;% summarize(ndsi_burned_avg=mean(ndsi)) #snow effect average for unburned ndsi_unburned_avg &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndsi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% filter(month %in% var.snow_months) %&gt;% filter(site %in% &quot;unburned&quot;) %&gt;% group_by(site, year) %&gt;% summarize(ndsi_unburned_avg=mean(ndsi)) #vegetation effect average for burned ndvi_burned_avg &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndvi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% filter(month %in% var.growth_months) %&gt;% filter(site %in% &quot;burned&quot;) %&gt;% group_by(site, year) %&gt;% summarize(ndvi_burned_avg=mean(ndvi)) #vegetation effect average for unburned ndvi_unburned_avg &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndvi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% filter(month %in% var.growth_months) %&gt;% filter(site %in% &quot;unburned&quot;) %&gt;% group_by(site, year) %&gt;% summarize(ndvi_unburned_avg=mean(ndvi)) #combining data for burned combined_burned &lt;- inner_join(ndvi_burned_avg, ndsi_burned_avg) #combining data for unburned combined_unburned &lt;- inner_join(ndvi_unburned_avg, ndsi_unburned_avg) #correlation for burned data cor(combined_burned$ndvi_burned_avg, combined_burned$ndsi_burned_avg) ## [1] 0.08700527 #correlation for unburned data cor(combined_unburned$ndvi_unburned_avg, combined_unburned$ndsi_unburned_avg) ## [1] -0.03100231 #graphing the data Preburngraph &lt;- ggplot(combine_preburn, aes(x=ndsi_preburn_avg, y=ndvi_preburn_avg)) + geom_point() + theme_few() + scale_color_few() + labs(x=&quot;Pre-burn NDSI Average&quot;, y=&quot;Pre-burn NDVI Average&quot;) Postburngraph &lt;- ggplot(combine_postburn, aes(x=ndsi_postburn_avg, y=ndvi_postburn_avg)) + geom_point() + theme_few() + scale_color_few()+ labs(x=&quot;Post-burn NDSI Average&quot;, y = &quot;Post-burn NDVI Average&quot;) Burnedgraph &lt;- ggplot(combined_burned, aes(x=ndsi_burned_avg, y=ndvi_burned_avg)) + geom_point() + theme_few() + scale_color_few()+ labs(x=&quot;NDSI Burned Average&quot;, y=&quot;NDVI Burned Average&quot;) Unburnedgraph &lt;- ggplot(combined_unburned, aes(x=ndsi_unburned_avg, y=ndvi_unburned_avg))+ geom_point() + theme_few() + scale_color_few()+ labs(x= &quot;Average NDSI Unburned&quot;, y=&quot;Average NDVI Unburned&quot;) #Plotting the data in one frame Plot &lt;- ggarrange(Preburngraph, Postburngraph, Burnedgraph, Unburnedgraph, labels = c(&quot;Pre-burned&quot;, &quot;Post-burned&quot;, &quot;Burned&quot;, &quot;Unburned&quot;), ncol = 2, nrow = 2) Plot For pre-burn snow effect, the correlation is 0.091. For post-burn snow effect, the correlation is 0.244. For un-burned snow effect, the correlation is -0.031 For burned snow effect, the correlation is 0.087. The snow effect from question 2 is a more generalized correlation. While all of these variables have a weak correlation, this question isolates the different variables in the data to help determine the relationship between snow coverage and vegetation growth. The post-burn condition has the strongest correlation between the previous year’s snow coverage and the vegetation growth for the following year. The weakest correlation between snow coverage and vegetation growth was for the un-burned condition. This is interesting because this could potentially mean that the Hayman Fire has pushed the vegetation growth to rely more on snow coverage to get their nutrients. This is still a weak correlation, so more research will need to be conducted to determine if this is true or not; there are many other variables in the environment that could have caused this correlation. 1.5 Average Greenest Month Here, we looked at which month was the greenest, on average. We discovered that August was the greenest month. #creating an object for the average vegetation for each month ndvigreenest &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndvi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% group_by(month) %&gt;% summarize(ndvi=mean(ndvi)) #Plotting the average vegetation for each month ggplot(ndvigreenest, aes(x=month, y=ndvi)) + geom_bar(stat=&quot;identity&quot;, fill=&quot;#009E73&quot;) + theme_minimal() 1.6 Average Snowiest Month Next, we looked at which month was the snowiest on average. January was the snowiest month. #creating snow object ndsisnowiest &lt;- full_wide[c(&quot;DateTime&quot;, &quot;ndsi&quot;, &quot;month&quot;, &quot;year&quot;, &quot;site&quot;)] %&gt;% group_by(month) %&gt;% summarize(ndsi=mean(ndsi)) #plotting the snow for each month ggplot(ndsisnowiest, aes(x=month, y=ndsi)) + geom_bar(stat=&quot;identity&quot;, fill=&quot;#56B4E9&quot;) + theme_minimal() "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
